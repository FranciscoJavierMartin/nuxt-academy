generator client {
  provider      = "prisma-client-js"
  output        = "../node_modules/.prisma/client"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Course {
  id        Int       @id @default(autoincrement())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  chapters  Chapter[]
}

model Chapter {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String
  number    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courseId  Int
  Course    Course   @relation(fields: [courseId], references: [id])
  lessons   Lesson[]
}

model Lesson {
  id             Int              @id @default(autoincrement())
  title          String
  slug           String
  number         Int
  downloadUrl    String
  videoId        Int
  text           String
  sourceUrl      String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  chapterId      Int
  Chapter        Chapter          @relation(fields: [chapterId], references: [id])
  LessonProgress LessonProgress[]
}

model LessonProgress {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime
  completed Boolean  @default(false)
  lessonId  Int
  userEmail String
  Lesson    Lesson   @relation(fields: [lessonId], references: [id])

  @@unique([lessonId, userEmail])
}
